<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link rel="stylesheet" href="/css/admin-dashboard.css" />
    <link rel="icon" href="/images/goevents5.png" type="image/x-icon" />

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  </head>
  <body>
    <div class="wrapper">
      <nav id="sidebar">
        <div class="sidebar-header">
          <h3>Admin Panel</h3>
        </div>
        <ul class="list-unstyled components">
          <li><a href="/admin/dashboard">Dashboard</a></li>
          <li><a href="/admin/users">Users</a></li>
          <li><a href="/admin/events">Events</a></li>
          <li><a href="/admin/event-types">Event Types</a></li>
          <li><a href="/admin/locations">Locations</a></li>
        </ul>
      </nav>

      <div id="content">
        <nav class="navbar navbar-expand-lg navbar-light">
          <div class="container-fluid">
            <div class="navbar-nav ml-auto">
              <div class="nav-item dropdown">
                <a
                  class="nav-link dropdown-toggle"
                  href="#"
                  id="navbarDropdown"
                  role="button"
                  data-toggle="dropdown"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  Account
                </a>
                <div
                  class="dropdown-menu dropdown-menu-right"
                  aria-labelledby="navbarDropdown"
                >
                  <a class="dropdown-item" href="/logout">Logout</a>
                  <button id="dark-mode-toggle" class="dropdown-item">Toggle Dark Mode</button>
                </div>
              </div>
            </div>
          </div>
        </nav>

      <div class="container mt-4">
        <h2>Edit User</h2>
        <form id="editUserForm">
          <div class="form-group">
            <label for="firstName">First Name</label>
            <input type="text" class="form-control" id="firstName" name="first_name" value="<%= user.first_name %>" required>
          </div>
          <div class="form-group">
            <label for="lastName">Last Name</label>
            <input type="text" class="form-control" id="lastName" name="last_name" value="<%= user.last_name %>" required>
          </div>
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" required>
          </div>
          <div class="form-group">
            <label for="status">Status</label>
            <select class="form-control" id="status" name="status">
              <option value="active" <%= user.status === 'active' ? 'selected' : '' %>>Active</option>
              <option value="inactive" <%= user.status === 'inactive' ? 'selected' : '' %>>Inactive</option>
              <option value="blocked" <%= user.status === 'blocked' ? 'selected' : '' %>>Blocked</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Save Changes</button>
          <button type="button" class="btn btn-warning" id="block15DaysBtn">Block for 15 Days</button>
          <a href="/admin/users" class="btn btn-secondary">Cancel</a>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.getElementById('editUserForm').addEventListener('submit', async function(event) {
      event.preventDefault();

      const userId = '<%= user.id %>'; 
      const formData = {
        first_name: document.getElementById('firstName').value,
        last_name: document.getElementById('lastName').value,
        email: document.getElementById('email').value,
        status: document.getElementById('status').value
      };

      try {
        const response = await fetch(`/admin/users/${userId}/edit`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        const result = await response.json();
        if (response.ok) {
          alert('User updated successfully!');
          window.location.href = '/admin/users';  
        } else {
          alert(`Error: ${result.message}`);
        }
      } catch (error) {
        console.error('Error updating user:', error);
      }
    });

    document.getElementById('block15DaysBtn').addEventListener('click', async function() {
    const userId = '<%= user.id %>'; 
    const blockUntil = new Date();
    blockUntil.setDate(blockUntil.getDate() + 15); 

    const formData = {
      first_name: document.getElementById('firstName').value,
      last_name: document.getElementById('lastName').value,
      email: document.getElementById('email').value,
      status: 'blocked',
      block_until: blockUntil.toISOString() 
    };

    try {
      const response = await fetch(`/admin/users/${userId}/edit`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      });

      const result = await response.json();
      if (response.ok) {
        alert('User blocked for 15 days!');
        window.location.href = '/admin/users';  
      } else {
        alert(`Error: ${result.message}`);
      }
    } catch (error) {
      console.error('Error blocking user for 15 days:', error);
    }
  });
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const darkModeToggle = document.getElementById("dark-mode-toggle");

      darkModeToggle.addEventListener("click", function () {
        document.body.classList.toggle("dark-mode");

        const isDarkMode = document.body.classList.contains("dark-mode");
        localStorage.setItem("darkMode", isDarkMode);
      });

      if (localStorage.getItem("darkMode") === "true") {
        document.body.classList.add("dark-mode");
      }
    });
  </script>
  
</body>
</html>
