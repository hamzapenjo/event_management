<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link rel="stylesheet" href="/css/admin-dashboard.css" />
    <link rel="icon" href="/images/goevents5.png" type="image/x-icon" />

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  </head>
  <body>
    <div class="wrapper">
      <nav id="sidebar">
        <div class="sidebar-header">
          <h3>Admin Panel</h3>
        </div>
        <ul class="list-unstyled components">
          <li><a href="/admin/dashboard">Dashboard</a></li>
          <li><a href="/admin/users">Users</a></li>
          <li><a href="/admin/events">Events</a></li>
          <li><a href="/admin/event-types">Event Types</a></li>
          <li><a href="/admin/locations">Locations</a></li>
        </ul>
      </nav>

      <div id="content">
        <nav class="navbar navbar-expand-lg navbar-light">
          <div class="container-fluid">
            <div class="navbar-nav ml-auto">
              <div class="nav-item dropdown">
                <a
                  class="nav-link dropdown-toggle"
                  href="#"
                  id="navbarDropdown"
                  role="button"
                  data-toggle="dropdown"
                  aria-haspopup="true"
                  aria-expanded="false"
                >
                  Account
                </a>
                <div
                  class="dropdown-menu dropdown-menu-right"
                  aria-labelledby="navbarDropdown"
                >
                  <a class="dropdown-item" href="/logout">Logout</a>
                  <button id="dark-mode-toggle" class="dropdown-item">
                    Toggle Dark Mode
                  </button>
                </div>
              </div>
            </div>
          </div>
        </nav>

        <div class="container mt-4">
          <h2>Create New Event Type</h2>
          <form id="createEventTypeForm">
            <div class="form-group">
              <label for="name">Event Type Name</label>
              <input
                type="text"
                class="form-control"
                id="name"
                name="name"
                placeholder="Enter event type name"
                required
              />
            </div>
            <div class="form-group">
              <label for="description">Description</label>
              <textarea
                class="form-control"
                id="description"
                name="description"
                rows="4"
                placeholder="Enter event type description"
                required
              ></textarea>
            </div>
            <button type="submit" class="btn btn-success">
              Create Event Type
            </button>
            <a href="/admin/event-types" class="btn btn-secondary">Cancel</a>
          </form>
        </div>
      </div>
    </div>

    <script>
      document
        .getElementById("createEventTypeForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = {
            name: document.getElementById("name").value,
            description: document.getElementById("description").value,
          };

          try {
            const response = await fetch("/admin/event-types", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            });

            const result = await response.json();
            if (response.ok) {
              alert("Event type created successfully!");
              window.location.href = "/admin/event-types";
            } else {
              alert(`Error: ${result.message}`);
            }
          } catch (error) {
            console.error("Error creating event type:", error);
          }
        });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const darkModeToggle = document.getElementById("dark-mode-toggle");

        darkModeToggle.addEventListener("click", function () {
          document.body.classList.toggle("dark-mode");

          const isDarkMode = document.body.classList.contains("dark-mode");
          localStorage.setItem("darkMode", isDarkMode);
        });

        if (localStorage.getItem("darkMode") === "true") {
          document.body.classList.add("dark-mode");
        }
      });
    </script>
  </body>
</html>
